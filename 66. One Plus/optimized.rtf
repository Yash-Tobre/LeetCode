{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red74\green142\blue209;\red204\green204\blue202;
\red67\green193\blue160;\red212\green213\blue151;\red144\green216\blue255;\red167\green197\blue150;\red184\green112\blue179;
}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c100000;\cssrgb\c35198\c62930\c85374;\cssrgb\c83770\c83767\c83038;
\cssrgb\c30735\c79185\c69026;\cssrgb\c86166\c86054\c65691;\cssrgb\c62457\c87769\c100000;\cssrgb\c71162\c80935\c65326;\cssrgb\c77780\c53062\c75326;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf0 \cb2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 class\strokec4  \strokec5 Solution\strokec4 :\
    \strokec3 def\strokec4  \strokec6 plusOne\strokec4 (\strokec7 self\strokec4 , \strokec7 digits\strokec4 : List[\strokec5 int\strokec4 ]) -> List[\strokec5 int\strokec4 ]:\
        final_int = \strokec8 0\strokec4 \
        \strokec9 for\strokec4  each \strokec3 in\strokec4  \strokec6 range\strokec4 (\strokec8 0\strokec4 ,\strokec6 len\strokec4 (digits)):\
            \strokec9 if\strokec4  each != \strokec6 len\strokec4 (digits)-\strokec8 1\strokec4 :\
                final_int = final_int + digits[each] * \strokec8 10\strokec4 **(\strokec6 len\strokec4 (digits)-\strokec8 1\strokec4 -each)\
            \strokec9 else\strokec4 :\
                final_int += digits[-\strokec8 1\strokec4 ]+\strokec8 1\strokec4 \
        output = []\
        \strokec9 for\strokec4  each \strokec3 in\strokec4  \strokec5 str\strokec4 (final_int):\
            output.append(\strokec5 int\strokec4 (each))\
        \strokec9 return\strokec4  output\
\
\
\
\
}